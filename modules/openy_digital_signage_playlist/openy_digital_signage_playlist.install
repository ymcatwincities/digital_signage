<?php

/**
 * @file
 * Update and install hooks.
 */

use Drupal\openy_digital_signage_playlist\Entity\OpenYPlaylistItem;
use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 */
function openy_digital_signage_playlist_install() {
  /** @var  Drupal\user\Entity\Role[] $roles */
  $roles = Role::loadMultiple([
    'digital_signage_editor',
    'digital_signage_admin'
  ]);

  /** @var \Drupal\user\PermissionHandlerInterface $permission_handler */
  $permission_handler = Drupal::service('user.permissions');
  $permissions = $permission_handler->getPermissions();

  $permissions_by_provider = [];
  foreach ($permissions as $permission_name => $permission) {
    $permissions_by_provider[$permission['provider']][$permission_name] = $permission;
  }

  // 'Digital signage admin' has full access to playlist pages.
  // 'Digital signage editor' doesn't have access to playlist settings.
  if (isset($permissions_by_provider['openy_digital_signage_playlist'])) {
    foreach ($permissions_by_provider['openy_digital_signage_playlist'] as $permission => $data) {
      $roles['digital_signage_admin']->grantPermission($permission);

      if ($permission != 'administer digital signage playlist entities' && $permission != 'administer digital signage playlist item entities') {
        $roles['digital_signage_editor']->grantPermission($permission);
      }
    }

    $roles['digital_signage_admin']->save();
    $roles['digital_signage_editor']->save();
  }

}

/**
 * Set default permissions for DS roles.
 */
function openy_digital_signage_playlist_update_8001(&$sandbox) {
  openy_digital_signage_playlist_install();
}

/**
 * Update duration field definition.
 */
function openy_digital_signage_playlist_update_8002(&$sandbox) {
  $definition_manager = \Drupal::entityDefinitionUpdateManager();
  $field_name = 'duration';
  $entity_type_id = 'openy_ds_playlist_item';

  // Ignore entity manager caches.
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_type_manager->useCaches(FALSE);

  $database = \Drupal::database();
  $duration_service = \Drupal::service('duration_field.service');

  // Get the existing database value from the field table.
  $values = $database->select($entity_type_id, 'fieldtable')
    ->fields('fieldtable', [
      'id',
      $field_name,
    ])
    ->execute()
    ->fetchAllKeyed();

  // Clear out the values.
  $database->update($entity_type_id)
    ->fields([$field_name => NULL])
    ->execute();

  // Uninstall the field.
  $field_storage_definition = $definition_manager->getFieldStorageDefinition($field_name, $entity_type_id);
  $definition_manager->uninstallFieldStorageDefinition($field_storage_definition);

  $entity_type = $entity_type_manager->getDefinition($entity_type_id);
  $fields = OpenYPlaylistItem::baseFieldDefinitions($entity_type);

  // Install the new definition.
  $definition_manager->installFieldStorageDefinition($field_name, $entity_type_id, 'openy_digital_signage_playlist', $fields[$field_name]);

  // Restore the values.
  foreach ($values as $id => $value) {
    $database->update($entity_type_id)
      ->fields([
        $field_name . '__duration' => $value,
        $field_name . '__seconds' => $duration_service->getSecondsFromDurationString($value),
      ])
      ->condition('id', $id)
      ->execute();
  }
}
